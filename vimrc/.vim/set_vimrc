"from ~/.vimrc

"Параметры отступа
set autoindent      "Новые строки наследуют отступ предыдущих строк.
set expandtab       " Преобразуйте табуляции в пробелы.
"set filetype=indent " Включите правила отступа, зависящие от типа файла. включено выше
set shiftround      " При смещении строк округляйте отступ до ближайшего значения, кратного ширине сдвига.
set shiftwidth=4    " Заменяет табуляцию на четыре пробела.
set smarttab        " Вставьте пробелы ‘tabstop’ при нажатии клавиши ‘tab’.
set tabstop=4       " Сделайте отступ в четыре пробела.

" Параметры поиска
set hlsearch        " Включить выделение поиска.
set ignorecase      " Игнорировать регистр при поиске.
set incsearch       " Пошаговый поиск, показывающий частичные совпадения.
set smartcase       " Автоматически переключать поиск на чувствительный к регистру, если поисковый запрос содержит заглавную букву.

" Параметры форматирования текста
"set display+=lastline      " Всегда старайтесь показывать последнюю строку абзаца.
set encoding=utf-8          " Используйте кодировку, поддерживающую юникод.
"set scrolloff=1            " Число строк экрана, которые нужно оставить над и под курсором.
"set sidescrolloff=5        " Количество столбцов экрана, которые нужно держать слева и справа от курсора.

setlocal list " Включить подсветку невидимых символов
setlocal listchars=tab:\|\ ,trail:· " Настройка подсветки невидимых символов

" Перенос строк: wrap заставляет переносить строчки без их разделения
" Соответсвенно nowrap рендерит строчки за границами экрана
"set wrap           " Включить перенос строк.
"set linebreak      " Избегайте переноса строки в середине слова.
" или другой вариант
"set wrap linebreak nolist "Данная вариация работает как wrap...
"set textwidth=80 "Где 80 стоит заменить на нужную вам длину строки

" Параметры пользовательского интерфейса
"set bs=2              " same as :set backspace=indent,eol,start
"set wildmenu           " Отображение параметров завершения вкладки командной строки в виде меню.
"set tabpagemax=50      " Максимальное количество страниц вкладок, которые можно открыть из командной строки.
"set colorschem wombat256mod    " Изменить цветовую схему.
"set number              " Показывать номера строк на боковой панели.
"set relativenumber      " Показать номер строки в текущей строке и относительные числа во всех остальных строках.
set number relativenumber
"set nu rnu
"set noerrorbells       " Отключить звуковой сигнал при ошибках.
"set visualbell         " Мигание экрана вместо звукового сигнала об ошибках.
"set mouse=a            " Включите мышь для прокрутки и изменения размера.
"set title              " Задайте заголовок окна, отражающий редактируемый файл.
set background=dark     " Используйте цвета, подходящие к темному фону.
set termguicolors
"set ruler              " Всегда показывать позицию курсора.
"set cursorline         " Выделите строку под курсором.

" Если вы используете обычный терминальный Вим, а не NeoVim, то...
" ... для изменения курсора в разных режимах используйте это:
" Понижаем задержку ввода escape последовательностей
set ttimeoutlen=10
let &t_SI.="\e[5 q" "SI = режим вставки
let &t_SR.="\e[3 q" "SR = режим замены
let &t_EI.="\e[1 q" "EI = нормальный режим
"Где 1 - это мигающий прямоугольник
"2 - обычный прямоугольник
"3 - мигающее подчёркивание
"4 - просто подчёркивание
"5 - мигающая вертикальная черта
"6 - просто вертикальная черта


" строка состояния
set laststatus=2       " Всегда отображать строку состояния.
set statusline=%f%m%r%h%w\ %y\ enc:%{&enc}\ ff:%{&ff}\ fenc:%{&fenc}%=(ch:%3b\ hex:%2B)\ col:%2c\ line:%2l/%L\ [%2p%%]

" mapping
" чтобы русские буквы работали также как и английские
set langmap=ФИСВУАПРШОЛДЬТЩЗЙКЫЕГМЦЧНЯ;ABCDEFGHIJKLMNOPQRSTUVWXYZ,фисвуапршолдьтщзйкыегмцчня;abcdefghijklmnopqrstuvwxyz

" Ctrl+n вкл/выкл нумерацию строк 
nnoremap <silent> <C-n> :set number! relativenumber!<Return>
nnoremap <silent> <C-c> :set termguicolors!<Return>

" Ctrl+{hjkl} создание окон и перемещение между нимим 
map <silent> <C-h> :call WinMove('h')<CR>
map <silent> <C-j> :call WinMove('j')<CR>
map <silent> <C-k> :call WinMove('k')<CR>
map <silent> <C-l> :call WinMove('l')<CR>

function! WinMove(key)
  let t:curwin = winnr()
  exec "wincmd ".a:key
  if (t:curwin == winnr())
    if (match(a:key,'[jk]'))
      wincmd v
    else
      wincmd s
    endif
    exec "wincmd ".a:key
  endif
endfunction

" Пользовательское меню. По <F9> позволяет приостановить работу Vim и вызвать соответствующие программы:
set wildmenu
set wcm=<Tab>
menu Exec.Run       :update \| !$(sed -nr '1s/\#\!//p' %) "%" <CR>
menu Exec.bash      :update \| !/bin/bash -x "%" <CR>
menu Exec.Python    :update \| !python "%" <CR>
menu Exec.GForth    :update \| !gforth "%" <CR>
menu Exec.Perl      :update \| !perl "%" <CR>
menu Exec.Ruby      :update \| !ruby "%" <CR>
menu Exec.xterm     :!xterm<CR>
menu Exec.mc        :!mc<CR>
menu Exec.xterm_mc  :!xterm -e mc<CR>
map <F9> :emenu Exec.<Tab>

set wildmenu
set wcm=<Tab>
menu Exit.save     :w<CR>
menu Exit.SaveExit :exit<CR>
menu Exit.quit     :quit<CR>
menu Exit.quit!    :quit!<CR>
menu Exit.SaveSudo :w !sudo tee "%"
map <F10> :emenu Exit.<Tab>

" clear search results
nnoremap <silent> // :noh<CR>

" save as sudo
ca w!! w !sudo tee "%"

" clear empty spaces at the end of lines on save of python files
autocmd BufWritePre *.py :%s/\s\+$//e
autocmd BufWritePre *.sh :%s/\s\+$//e
autocmd BufWritePre *.yml :%s/\s\+$//e
autocmd BufWritePre Dockerfile :%s/\s\+$//e

